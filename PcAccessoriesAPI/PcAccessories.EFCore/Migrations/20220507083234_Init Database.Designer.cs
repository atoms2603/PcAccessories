// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PcAccessories.EFCore.Data;

namespace PcAccessories.EFCore.Migrations
{
    [DbContext(typeof(PcAccessoriesDbContext))]
    [Migration("20220507083234_Init Database")]
    partial class InitDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("longtext");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("BrandId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("CategoryId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("CreatetionBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId")
                        .IsUnique();

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d1"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d1"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Logitech",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d2"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d1"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Razor",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d3"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d2"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Logitech",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d4"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d2"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Razor",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d5"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d3"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Logitech",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d6"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d3"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d7"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d4"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sakura",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d8"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d4"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Razor",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d9"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d5"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sony",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d0"),
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d5"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AzAudio",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("CategoryId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("CreatetionBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d1"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keyboard",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d2"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mouse",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d3"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Earphone",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d4"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keycap",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = new Guid("79bd714f-9576-45ba-b5b7-f00649be00d5"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Micro",
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("CreatetionBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("DeliveryName")
                        .HasColumnType("longtext");

                    b.Property<string>("DeliveryPhone")
                        .HasColumnType("longtext");

                    b.Property<Guid>("InvoiceId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.InvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("CreatetionBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("InvoiceDetailId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("InvoiceId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceDetailId")
                        .IsUnique();

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("BrandId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("CreatetionBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d1"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keyboard-1",
                            Price = 100.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d1"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d1"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keyboard-2",
                            Price = 1000.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d2"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d2"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keyboard-3",
                            Price = 1500.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d3"),
                            Quantity = 20,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d2"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keyboard-4",
                            Price = 2000.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d4"),
                            Quantity = 15,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d3"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mouse-1",
                            Price = 150.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d5"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d3"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mouse-2",
                            Price = 200.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d6"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d4"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mouse-3",
                            Price = 150.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d7"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d4"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mouse-4",
                            Price = 200.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d8"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d5"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Earphone-1",
                            Price = 350.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be00d9"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d5"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Earphone-2",
                            Price = 200.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be0d10"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d6"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Earphone-3",
                            Price = 550.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be0d11"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            BrandId = new Guid("89bd714f-9576-45ba-b5b7-f00649be00d6"),
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Earphone-4",
                            Price = 400.0,
                            ProductId = new Guid("99bd714f-9576-45ba-b5b7-f00649be0d12"),
                            Quantity = 10,
                            Status = (byte)0,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("CreatetionBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("ProductImageId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProductImageId")
                        .IsUnique();

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.ProductLove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("CreatetionBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("ProductLoveId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("ProductLoveId")
                        .IsUnique();

                    b.ToTable("ProductLoves");
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "129e87d0-a63a-46ec-a43a-41927e48065b",
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("CreatetionBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<Guid>("SlideId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("char(36)")
                        .IsFixedLength(true);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SlideId")
                        .IsUnique();

                    b.ToTable("Sliders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "1.png",
                            SlideId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00d1"),
                            Status = (byte)1,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "2.png",
                            SlideId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00d2"),
                            Status = (byte)1,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "3.png",
                            SlideId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00d3"),
                            Status = (byte)1,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "4.png",
                            SlideId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00d4"),
                            Status = (byte)1,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatetionBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "5.png",
                            SlideId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00d5"),
                            Status = (byte)1,
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PcAccessories.Entities.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatetionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastLogInTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "47e858a6-5887-4d0d-b706-f04f834266d3",
                            CreatetionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huyt4242@gmail.com",
                            EmailConfirmed = true,
                            LastLogInTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            Name = "Atoms",
                            NormalizedEmail = "huyt4242@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEKc8a+HsoZhDNSKeu48P/HwKMAKCtneCvCl8Nbq25JQgW7CjEn2Ojms58i+H9DXfUw==",
                            PhoneNumber = "0342553542",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = (byte)0,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
